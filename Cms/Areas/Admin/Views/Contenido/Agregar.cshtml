@model Model.Entities.Contenido

@{

    ViewBag.Title = (Model.idContenido > 0 ? Model.Titulo : "Nuevo registro");
}

<h2>Agregar</h2>

@using (Html.BeginForm("Guardar", "Contenido", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.idContenido)
    @Html.HiddenFor(x => x.idCategoria)
    @Html.HiddenFor(x => x.idEmpresa)
    <div class="form-horizontal">
        <h4>Contenido</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Subir imagen</label>
            <div class="col-md-10 control-label">
            
                <input type="file" id="Foto"/>  
               
            </div>
         
        </div>
        <div  class="form-group">
            <div id="image-holder" class="col-md-offset-2 col-md-10">

            </div>
        </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" data-ajax="true" class="btn btn-primary">Guardar</button>
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>



<script>
function ValidarImagen(obj){
    var uploadFile = obj.files[0];

    if (!window.FileReader) {
        alert('El navegador no soporta la lectura de archivos');
        return;
    }

    if (!(/\.(jpg|png|gif)$/i).test(uploadFile.name)) {
        alert('El archivo a adjuntar no es una imagen');
    }
    else {
        var img = new Image();
        img.onload = function () {
         
            var fileSize = uploadFile.size;
            if (fileSize > (1024 * 1024 * 2)) {
                alert('No debe que superar los 2Mb');
                
            }


        };
        img.src = URL.createObjectURL(uploadFile);
    
    }
}


$("#Foto").on('change', function () {

    //Get count of selected files
    var countFiles = $(this)[0].files.length;

    var imgPath = $(this)[0].value;
    var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
    var image_holder = $("#image-holder");
    image_holder.empty();

    if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
        if (typeof (FileReader) != "undefined") {

            //loop for each file selected for uploaded.
            for (var i = 0; i < countFiles; i++) {

                var reader = new FileReader();
                reader.onload = function (e) {
                    $("<img />", {
                        "src": e.target.result,
                        "class": "thumb-image  ",
                        "style":"width:300px;height:200px;"
                    }).appendTo(image_holder);
                }

                image_holder.show();
                reader.readAsDataURL($(this)[0].files[i]);
            }

        } else {
            alert("This browser does not support FileReader.");
        }
    } else {
        alert("Pls select only images");
    }
});
</script>
